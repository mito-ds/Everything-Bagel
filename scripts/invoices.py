{"code": "from mitosheet.public.v3 import *\nimport pandas as pd\n\n# Imported tmobile_customer_info.csv, tmobile_invoices_input.csv\ntmobile_customer_info = pd.read_csv(r'/Users/aarondiamond-reivich/Desktop/Enterprise Streamlit Demo/data/tmobile_customer_info.csv')\ntmobile_invoices_input = pd.read_csv(r'/Users/aarondiamond-reivich/Desktop/Enterprise Streamlit Demo/data/tmobile_invoices_input.csv')\n\n# Changed invoice_creation_date, invoice_due_date to dtype datetime\ntmobile_invoices_input['invoice_creation_date'] = pd.to_datetime(tmobile_invoices_input['invoice_creation_date'], format='%Y-%m-%d', errors='coerce')\ntmobile_invoices_input['invoice_due_date'] = pd.to_datetime(tmobile_invoices_input['invoice_due_date'], format='%Y-%m-%d', errors='coerce')\n\n# Added column 'is open'\ntmobile_invoices_input.insert(5, 'is open', IF(TYPE(tmobile_invoices_input['clear_date']) == 'NaN', 'yes', 'no'))\n\n# Merged tmobile_invoices_input and tmobile_customer_info into df_merge\ntemp_df = tmobile_customer_info.drop_duplicates(subset=['name_customer']) # Remove duplicates so lookup merge only returns first match\ndf_merge = tmobile_invoices_input.merge(temp_df, left_on=['name_customer'], right_on=['name_customer'], how='left', suffixes=['_tmobile_invoices_input', '_tmobile_customer_info'])\n", "code_options": null, "fully_parameterized_function": "from mitosheet.public.v3 import *\nimport pandas as pd\n\ndef function_irzm(file_name_import_csv_0, file_name_import_csv_1):\n    tmobile_customer_info = pd.read_csv(file_name_import_csv_0)\n    tmobile_invoices_input = pd.read_csv(file_name_import_csv_1)\n    \n    tmobile_invoices_input['invoice_creation_date'] = pd.to_datetime(tmobile_invoices_input['invoice_creation_date'], format='%Y-%m-%d', errors='coerce')\n    tmobile_invoices_input['invoice_due_date'] = pd.to_datetime(tmobile_invoices_input['invoice_due_date'], format='%Y-%m-%d', errors='coerce')\n    \n    tmobile_invoices_input.insert(5, 'is open', IF(TYPE(tmobile_invoices_input['clear_date']) == 'NaN', 'yes', 'no'))\n    \n    temp_df = tmobile_customer_info.drop_duplicates(subset=['name_customer']) # Remove duplicates so lookup merge only returns first match\n    df_merge = tmobile_invoices_input.merge(temp_df, left_on=['name_customer'], right_on=['name_customer'], how='left', suffixes=['_tmobile_invoices_input', '_tmobile_customer_info'])\n    \n    return tmobile_customer_info, tmobile_invoices_input, df_merge\n", "param_metadata": [{"original_value": "/Users/aarondiamond-reivich/Desktop/Enterprise Streamlit Demo/data/tmobile_customer_info.csv", "type": "import", "subtype": "file_name_import_csv", "required": false, "name": "file_name_import_csv_0"}, {"original_value": "/Users/aarondiamond-reivich/Desktop/Enterprise Streamlit Demo/data/tmobile_invoices_input.csv", "type": "import", "subtype": "file_name_import_csv", "required": false, "name": "file_name_import_csv_1"}], "mito_analysis_version": 1}